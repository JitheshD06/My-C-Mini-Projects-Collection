#include<stdio.h>
#include <unistd.h>
#include <time.h>

#define MAX_USER 10

const int bar_length = 50;

typedef struct{
    int id;
    int progress;
    int steps;
} Task;

void print_bar(Task task);
 
void clear_screen(); 
int main() {
    Task task[MAX_USER];
    srand(time(NULL));
    
    for(int i = 0; i < MAX_USER; i++) {
        task[i].id = i + 1;
        task[i].progress = 0;
        task[i].steps = rand() % 5 +1; 
    }
    
    int task_incomplete = 1;
    
    while(task_incomplete) {
        task_incomplete = 0; 
        clear_screen();
        for(int i = 0; i < MAX_USER; i++) {  
            task[i].progress += task[i].steps;
            if(task[i].progress > 100) {
                task[i].progress = 100;  
            } else if(task[i].progress < 100) {
                task_incomplete = 1;  
            }
            print_bar(task[i]);
        }
        sleep(1);
        printf("\n");
    }
    
    return 0;
}

void print_bar(Task task) {
    printf("Task %d: [", task.id);
    
    int bar_to_show = task.progress * bar_length / 100;
    for(int i = 0; i < bar_length; i++) {
        if(i < bar_to_show) {
            printf("=");
        } else {
            printf(" ");
        }
    }
    
    printf("] %d%%\n", task.progress);  
}
void clear_screen(){
    #ifdef _Win32
    system("cls");
    #else 
    system("clear");
    #endif  
}
